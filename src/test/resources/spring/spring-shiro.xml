<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:core="http://activemq.apache.org/schema/core"
    xmlns:redis="http://www.springframework.org/schema/redis"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
        http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core">

    <!-- SecurityManager -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <!-- session管理 -->
        <!-- 自定义realm -->
        <property name="realm" ref="customizeRealm"/>
        <property name="sessionManager" ref="sessionManager"></property>
        <property name="cacheManager" ref="cacheManager" />
    </bean>
    <!-- 自定义Realm -->
	<bean id="customizeRealm" class="com.camille.shaojing.shiro.CustomizeRealm"/>  
    <!-- session管理 -->
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <!-- session存储的实现 -->
        <property name="sessionDAO" ref="redisShiroSessionDao"></property>
        <!-- 设置全局会话超时时间，默认30分钟 --> 
        <property name="globalSessionTimeout" value="1800000"></property>
        <!-- sessionIdCookie的实现,用于重写覆盖容器默认的JSESSIONID -->
        <property name="sessionIdCookie" ref="sharesession"></property>
        <!-- 在会话过期后会调用SessionDAO的delete方法删除会话 -->
        <property name="deleteInvalidSessions" value="true"></property>
        <!-- 会话验证器调度时间 -->  
        <property name="sessionValidationInterval" value="1800000" /> 
        <!-- 定时检查失效的session -->
        <property name="sessionValidationSchedulerEnabled" value="true"/>
    </bean>
    <!-- sessionIdCookie的实现,用于重写覆盖容器默认的JSESSIONID -->
    <bean id="sharesession" class="org.apache.shiro.web.servlet.SimpleCookie">
        <!-- cookie的name,对应的默认是 JSESSIONID -->
        <constructor-arg name="name" value="SHAREJSESSIONID" />
        <!-- jsessionId的path为 / 用于多个系统共享jsessionId -->
        <property name="path" value="/" />
        <property name="httpOnly" value="true"/>
    </bean>
    <!-- Shiro过滤器 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">  
	    <!-- Shiro的核心安全接口,这个属性是必须的 -->  
	    <property name="securityManager" ref="securityManager"/>
	    <!-- 身份认证失败，则跳转到登录页面 -->  
	    <property name="loginUrl" value="/login.jsp"/>
	    <!-- 权限认证失败，则跳转到未授权页面 -->  
	    <property name="unauthorizedUrl" value="/unauthor.jsp"/>  
	    <!-- 登录成功,则跳转到首页 -->  
	    <property name="successUrl" value="/homepage"/>
	    <!-- Shiro连接约束配置,即过滤链的定义 -->  
	    <property name="filterChainDefinitions">  
	        <value>  
	        	/resources/** = anon
	            /unauthorized.jsp = anon
	            /login.jsp = anon
	            /user/login = anon
	            <!-- 生成图形验证码 -->
	            /captcha.jpg=anon
	            /logout = logout 
	            /** = authc
	        </value>  
	    </property>
	</bean>  
	<!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->  
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>  
	<!-- AOP式方法级权限检查 -->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true" />
	</bean>  
  	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">  
  		<property name="securityManager" ref="securityManager"/>  
    </bean>
    <!--redis开始 -->
     <!-- 自定义sessionDao -->
	<bean id="redisShiroSessionDao" class="com.camille.shaojing.shiro.RedisSessionDao">
		<property name="redisManager" ref="redisManager" />
		<property name="sessionIdGenerator" ref="sessionIdGenerator"></property>
	</bean>
     <!-- Session ID 生成器 -->
    <bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"></bean>
	<!-- 自定义cacheManager -->
	<bean id="cacheManager" class="com.camille.shaojing.shiro.RedisCacheManager">
		<property name="redisManager" ref="redisManager" />
	</bean>
	<!-- 自定义cache -->
	<bean id="redisCache" class="com.camille.shaojing.shiro.RedisCache">
		<constructor-arg ref="redisManager"></constructor-arg>
	</bean>
	<bean id="redisManager" class="com.camille.shaojing.shiro.RedisManager"></bean>
	<!--redis结束 -->
</beans>